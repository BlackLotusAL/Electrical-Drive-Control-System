PROGRAM Motor
#info= QLD
BOF


(**)

SOR  [0,1] (**) (**)  XIC  [1,0] (*All_Enable*) (**)  XIC  [2,0] (*Motor_Enable*) (**)  
 BST  FB  [3,0] (*1 gain*) (*2*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*True*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Start*) (**) )
   NXB  FB  [3,2] (*1 gain*) (*2*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*False*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Stop*) (**) )
 BND

EOR [6,0]


(**)

SOR  [0,6] (**) (**)  XIC  [1,0] (*All_Enable*) (**)  XIO  [2,0] (*Motor_Enable*) (**)  
 BST  FB  [3,0] (*1 gain*) (*2*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*True*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Stop*) (**) )
   NXB  FB  [3,2] (*1 gain*) (*2*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*False*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Start*) (**) )
 BND

EOR [6,0]


(**)

SOR  [0,11] (**) (**)  XIC  [1,0] (*Motor_RotateDirection*) (**)  
 BST  FB  [2,0] (*1 gain*) (*2*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*True*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*SetFwd*) (**) )
   NXB  FB  [2,2] (*1 gain*) (*2*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*False*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*SetRev*) (**) )
 BND

EOR [5,0]


(**)

SOR  [0,16] (**) (**)  XIO  [1,0] (*Motor_RotateDirection*) (**)  
 BST  FB  [2,0] (*1 gain*) (*2*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*True*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*SetRev*) (**) )
   NXB  FB  [2,2] (*1 gain*) (*2*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*False*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*SetFwd*) (**) )
 BND

EOR [5,0]


(**)

SOR  [0,21] (**) (**)  XIC  [1,0] (*All_Enable*) (**)  FB  [2,0] (*1 gain*) (*12*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Frequency_Set*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*SpeedRef*) (**) )
EOR [5,0]


(**)

SOR  [0,24] (**) (**)  XIC  [1,0] (*All_Enable*) (**)  FB  [2,0] (*1 gain*) (*15*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*SpeedFeedback*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Frequency_Feedback*) (**) )
EOR [5,0]


(**)

SOR  [0,27] (**) (**)  XIC  [1,0] (*All_Enable*) (**)  FB  [2,0] (*RA_PFx_ENET_STS_CMD*) (*RA_PFx_ENET_STS_CMD_1*) ( (*FBEN:*)(**) (**)  , (*IPAddress:*)(*IPAddress*) (**)  , (*UpdateRate_ms:*)(*UpdateRate_ms*) (**)  , (*EnetCtrlTO_sec:*)(*EnetCtrlTO_sec*) (**)  , (*Stop:*)(*Stop*) (**)  , (*Start:*)(*Start*) (**)  , (*Jog:*)(*Jog*) (**)  , (*ClrFault:*)(*ClrFault*) (**)  , (*SetFwd:*)(*SetFwd*) (**)  , (*SetRev:*)(*SetRev*) (**)  , (*SpeedRef:*)(*SpeedRef*) (**)  , (*AccelTime1:*)(*AccelTime1*) (**)  , (*DecelTime1:*)(*DecelTime1*) (**) ; (*FBENO:*)(**) (**)  , (*FBError:*)(**) (**)  , (*CommLoss:*)(**) (**)  , (*DriveType:*)(**) (**)  , (*DriveFault:*)(**) (**)  , (*FaultCode:*)(**) (**)  , (*Ready:*)(**) (**)  , (*Active:*)(**) (**)  , (*CmdFwd:*)(**) (**)  , (*CmdRev:*)(**) (**)  , (*AtRef:*)(**) (**)  , (*CmdSpeed:*)(**) (**)  , (*SpeedFeedback:*)(*SpeedFeedback*) (**)  , (*OutputCurrent:*)(**) (**)  , (*DCBusVoltage:*)(**) (**)  , (*OutputVoltage:*)(**) (**) )
EOR [5,0]


(**)

SOR  [0,44] (**) (**)  XIC  [1,0] (*All_Enable*) (**)  XIC  [2,0] (*Motor_Enable*) (**)  FB  [3,0] (*TON*) (*TON_1*) ( (*IN:IN*)(**) (**)  , (*PT:PT*)(*T#10000s*) (**) ; (*Q:Q*)(**) (**)  , (*ET:ET*)(*Timer0_ms*) (**) )
EOR [6,0]


(**)

SOR  [0,47] (**) (**)  XIC  [1,0] (*All_Enable*) (**)  
 BST  XIC  [2,0] (*Motor_Enable*) (**)  FB  [3,0] (*ANY_TO_REAL*) (*10*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Timer0_ms*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Timer0_Real*) (**) )  FB  [6,0] (*/*) (*11*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Timer0_Real*) (**)  , (*i2:*)(*1000.0*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Timer0_s*) (**) )  FB  [9,0] (*<>*) (*20*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*All_Status*) (**)  , (*i2:*)(*5*) (**) ; (*o1:*)(**) (**) )  FB  [12,0] (*1 gain*) (*18*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Timer0_s*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*All_Time*) (**) )
   NXB  FB  [2,3] (*=*) (*21*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*All_Status*) (**)  , (*i2:*)(*5*) (**) ; (*o1:*)(**) (**) )  FB  [5,3] (*1 gain*) (*18*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*0.0*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*All_Time*) (**) )
 BND

EOR [15,0]
EOF
#end_info
#info= ID_MAX
NextId=21
#end_info
END_PROGRAM