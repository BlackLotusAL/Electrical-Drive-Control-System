(****** QuickLD compiler *******************************)
(****** Copyright Rockwell Automation Canada, Ltd ******)
(****** ST *********************************************)

(*************** Rung **********************************)
(**)
(*Label :*)(**)
(* FB call: HSC *)
HSC_Data(ALL_ENABLE, HSCCMD, HSCAPPDATA, HSCSTSINFO, PLSDATA, 0) ;
STS := HSC_Data.Sts ;
__MO_HSC_1 := ALL_ENABLE ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
(*Label :*)(**)
__EDTB1 := ALL_ENABLE ;
IF __EDTB1 THEN
PULSE_REAL := ANY_TO_REAL(HSCAPPDATA.ACCUMULATOR) ;
END_IF ;
__MO_ANY_TO_REAL_1 := __EDTB1 ;
__EDTB2 := __EDTB1 ;
IF __EDTB2 THEN
POS_MOVE := (PULSE_REAL / PULSE_2_DISTANCE) ;
END_IF ;
__MO_DIV_1 := __EDTB2 ;
__EDTB3 := __EDTB2 ;
IF __EDTB3 THEN
PULSE_ABS := ABS(PULSE_REAL) ;
END_IF ;
__MO_ABS_1 := __EDTB3 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
(*Label :*)(**)
__EDTB4 := ALL_ENABLE ;
IF __EDTB4 THEN
XIN := (  POS_MOVE) ;
END_IF ;
__MO_1GAIN_1 := __EDTB4 ;

(*************** Code for the end of Rung **************)


(*************** Rung **********************************)
(**)
(*Label :*)(**)
(* FB call: DERIVATE *)
DERIVATE_1(ALL_ENABLE, XIN, CYCLE) ;
SPEED_TEMP := DERIVATE_1.XOUT ;
__MO_DERIVATE_1 := ALL_ENABLE ;
__EDTB5 := ALL_ENABLE ;
IF __EDTB5 THEN
SPEED_FEEDBACK := (SPEED_TEMP * 1000.0) ;
END_IF ;
__MO_MULT_1 := __EDTB5 ;
__EDTB6 := __EDTB5 ;
IF __EDTB6 THEN
SPEED_FEEDBACK_ABS := ABS(SPEED_FEEDBACK) ;
END_IF ;
__MO_ABS_2 := __EDTB6 ;

(*************** Code for the end of Rung **************)


(*************** Code for the end of File **************)
__GL __LG0000 ;



(*************** Local Symbols table *******************)
(* __EDTB1 *)
(* __EDTB2 *)
(* __EDTB3 *)
(* __EDTB4 *)
(* __EDTB5 *)
(* __EDTB6 *)

