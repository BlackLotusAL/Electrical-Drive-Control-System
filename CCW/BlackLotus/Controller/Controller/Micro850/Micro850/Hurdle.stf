PROGRAM Hurdle
#info= QLD
BOF


(**)

SOR  [0,1] (**) (**)  XIC  [1,0] (*All_Enable*) (**)  FB  [2,0] (*=*) (*16*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*All_Status*) (**)  , (*i2:*)(*3*) (**) ; (*o1:*)(**) (**) )  FB  [5,0] (*+*) (*2*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Pos_Move*) (**)  , (*i2:*)(*Pos_Comp*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Pos_Feedback*) (**) )  
 BST  FB  [8,0] (*=*) (*17*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Hurdle_Status*) (**)  , (*i2:*)(*1*) (**) ; (*o1:*)(**) (**) )  FB  [11,0] (*1 gain*) (*6*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Hurdle_Pos1*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Pos_Set*) (**) )  FB  [14,0] (*-*) (*43*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Pos_Set*) (**)  , (*i2:*)(*Pos_Feedback*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Pos_Error*) (**) )  FB  [17,0] (*ABS*) (*44*) ( (*EN:EN*)(**) (**)  , (*IN:IN*)(*Pos_Error*) (**) ; (*ENO:ENO*)(**) (**)  , (*ABS:Q*)(*Pos_Error_Abs*) (**) )  
 BST  FB  [20,0] (*<*) (*36*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Pos_Feedback*) (**)  , (*i2:*)(*Hurdle_Pos1*) (**) ; (*o1:*)(**) (**) )  FB  [23,0] (*>*) (*44*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Pos_Error_Abs*) (**)  , (*i2:*)(*ChangeSpeed_Threshold*) (**) ; (*o1:*)(**) (**) )  FB  [26,0] (*1 gain*) (*31*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Hurdle_Speed4*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Speed_Set*) (**) )
   NXB  
 BST  FB  [20,3] (*<=*) (*19*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Pos_Error_Abs*) (**)  , (*i2:*)(*ChangeSpeed_Threshold*) (**) ; (*o1:*)(**) (**) )  FB  [23,3] (*1 gain*) (*1*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Hurdle_Speed1*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Speed_Set*) (**) )  FB  [26,3] (*1 gain*) (*42*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Speed_2_Frequency_b1*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Speed_2_Frequency_b*) (**) )
   NXB  FB  [20,6] (*<=*) (*23*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Pos_Error_Abs*) (**)  , (*i2:*)(*GetSpeed_Threshold*) (**) ; (*o1:*)(**) (**) )  FB  [23,6] (*1 gain*) (*1*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Speed_Feedback_Abs*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Hurdle_Pass_Speed1*) (**) )  FB  [26,6] (*1 gain*) (*20*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*2*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Hurdle_Status*) (**) )
 BND

 BND

   NXB  
 BST  FB  [8,9] (*=*) (*21*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Hurdle_Status*) (**)  , (*i2:*)(*2*) (**) ; (*o1:*)(**) (**) )  FB  [11,9] (*1 gain*) (*7*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Hurdle_Pos2*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Pos_Set*) (**) )  FB  [14,9] (*-*) (*43*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Pos_Set*) (**)  , (*i2:*)(*Pos_Feedback*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Pos_Error*) (**) )  FB  [17,9] (*ABS*) (*44*) ( (*EN:EN*)(**) (**)  , (*IN:IN*)(*Pos_Error*) (**) ; (*ENO:ENO*)(**) (**)  , (*ABS:Q*)(*Pos_Error_Abs*) (**) )  
 BST  FB  [20,9] (*<*) (*37*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Pos_Feedback*) (**)  , (*i2:*)(*Hurdle_Pos2*) (**) ; (*o1:*)(**) (**) )  FB  [23,9] (*>*) (*44*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Pos_Error_Abs*) (**)  , (*i2:*)(*ChangeSpeed_Threshold*) (**) ; (*o1:*)(**) (**) )  FB  [26,9] (*1 gain*) (*24*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Hurdle_Speed4*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Speed_Set*) (**) )
   NXB  
 BST  FB  [20,12] (*<=*) (*23*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Pos_Error_Abs*) (**)  , (*i2:*)(*ChangeSpeed_Threshold*) (**) ; (*o1:*)(**) (**) )  FB  [23,12] (*1 gain*) (*1*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Hurdle_Speed2*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Speed_Set*) (**) )  FB  [26,12] (*1 gain*) (*42*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Speed_2_Frequency_b2*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Speed_2_Frequency_b*) (**) )
   NXB  FB  [20,15] (*<=*) (*23*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Pos_Error_Abs*) (**)  , (*i2:*)(*GetSpeed_Threshold*) (**) ; (*o1:*)(**) (**) )  FB  [23,15] (*1 gain*) (*1*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Speed_Feedback_Abs*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Hurdle_Pass_Speed2*) (**) )  FB  [26,15] (*1 gain*) (*20*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*3*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Hurdle_Status*) (**) )
 BND

 BND

   NXB  
 BST  FB  [8,18] (*=*) (*25*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Hurdle_Status*) (**)  , (*i2:*)(*3*) (**) ; (*o1:*)(**) (**) )  FB  [11,18] (*1 gain*) (*8*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Hurdle_Pos3*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Pos_Set*) (**) )  FB  [14,18] (*-*) (*43*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Pos_Set*) (**)  , (*i2:*)(*Pos_Feedback*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Pos_Error*) (**) )  FB  [17,18] (*ABS*) (*44*) ( (*EN:EN*)(**) (**)  , (*IN:IN*)(*Pos_Error*) (**) ; (*ENO:ENO*)(**) (**)  , (*ABS:Q*)(*Pos_Error_Abs*) (**) )  
 BST  FB  [20,18] (*<*) (*38*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Pos_Feedback*) (**)  , (*i2:*)(*Hurdle_Pos3*) (**) ; (*o1:*)(**) (**) )  FB  [23,18] (*>*) (*44*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Pos_Error_Abs*) (**)  , (*i2:*)(*ChangeSpeed_Threshold*) (**) ; (*o1:*)(**) (**) )  FB  [26,18] (*1 gain*) (*28*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Hurdle_Speed4*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Speed_Set*) (**) )
   NXB  
 BST  FB  [20,21] (*<=*) (*27*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Pos_Error_Abs*) (**)  , (*i2:*)(*ChangeSpeed_Threshold*) (**) ; (*o1:*)(**) (**) )  FB  [23,21] (*1 gain*) (*1*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Hurdle_Speed3*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Speed_Set*) (**) )  FB  [26,21] (*1 gain*) (*42*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Speed_2_Frequency_b3*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Speed_2_Frequency_b*) (**) )
   NXB  FB  [20,24] (*<=*) (*23*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Pos_Error_Abs*) (**)  , (*i2:*)(*GetSpeed_Threshold*) (**) ; (*o1:*)(**) (**) )  FB  [23,24] (*1 gain*) (*1*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Speed_Feedback_Abs*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Hurdle_Pass_Speed3*) (**) )  FB  [26,24] (*1 gain*) (*20*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*4*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Hurdle_Status*) (**) )
 BND

 BND

   NXB  FB  [8,27] (*=*) (*29*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Hurdle_Status*) (**)  , (*i2:*)(*4*) (**) ; (*o1:*)(**) (**) )  FB  [11,27] (*1 gain*) (*9*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Hurdle_Pos4*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Pos_Set*) (**) )  FB  [14,27] (*-*) (*43*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Pos_Set*) (**)  , (*i2:*)(*Pos_Feedback*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Pos_Error*) (**) )  FB  [17,27] (*ABS*) (*44*) ( (*EN:EN*)(**) (**)  , (*IN:IN*)(*Pos_Error*) (**) ; (*ENO:ENO*)(**) (**)  , (*ABS:Q*)(*Pos_Error_Abs*) (**) )  
 BST  FB  [20,27] (*<*) (*39*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Pos_Feedback*) (**)  , (*i2:*)(*Hurdle_Pos4*) (**) ; (*o1:*)(**) (**) )  FB  [23,27] (*>*) (*46*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Pos_Error_Abs*) (**)  , (*i2:*)(*Pos_Error_Threshold*) (**) ; (*o1:*)(**) (**) )  FB  [26,27] (*1 gain*) (*28*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Hurdle_Speed4*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Speed_Set*) (**) )
   NXB  FB  [20,30] (*<=*) (*27*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Pos_Error_Abs*) (**)  , (*i2:*)(*Pos_Error_Threshold*) (**) ; (*o1:*)(**) (**) )  FB  [23,30] (*1 gain*) (*28*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*1*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Hurdle_Status*) (**) )  FB  [26,30] (*1 gain*) (*35*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Hurdle_Pos1*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Pos_Set*) (**) )  FB  [29,30] (*1 gain*) (*30*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*False*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Motor_Enable*) (**) )
 BND

 BND

 BND

 BND

EOR [32,0]


(**)

SOR  [0,35] (**) (**)  XIC  [1,0] (*All_Enable*) (**)  FB  [2,0] (*=*) (*16*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*All_Status*) (**)  , (*i2:*)(*3*) (**) ; (*o1:*)(**) (**) )  
 BST  FB  [5,0] (*>*) (*5*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Pos_Error*) (**)  , (*i2:*)(*0.0*) (**) ; (*o1:*)(**) (**) )  FB  [8,0] (*1 gain*) (*8*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*False*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Motor_RotateDirection*) (**) )
   NXB  FB  [5,3] (*<*) (*7*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*Pos_Error*) (**)  , (*i2:*)(*0.0*) (**) ; (*o1:*)(**) (**) )  FB  [8,3] (*1 gain*) (*6*) ( (*EN:EN*)(**) (**)  , (*i1:*)(*True*) (**) ; (*ENO:ENO*)(**) (**)  , (*o1:*)(*Motor_RotateDirection*) (**) )
 BND

EOR [11,0]
EOF
#end_info
#info= ID_MAX
NextId=46
#end_info
END_PROGRAM